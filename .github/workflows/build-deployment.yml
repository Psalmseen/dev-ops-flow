name: Deployment
on:
  push:
    branches:
      - '**'
      - '!main'

jobs:
  #   test:
  #     runs-on: ubuntu-latest
  #     steps:
  #       - name: Checkout
  #         uses: actions/checkout@v3
  #       - name: Install dependecies
  #         run: npm i
  #       - name: test
  #         run: npm run test
  #       - name: run coverage
  #         run: npm run coverage
  #       - name: Report Coverage
  #         if: always()
  #         uses: davelosert/vitest-coverage-report-action@v1
  #         with:
  #           vite-config-path: ./vite.config.ts

  #   cypress:
  #     runs-on: ubuntu-latest
  #     needs: test
  #     steps:
  #       - name: Checkout
  #         uses: actions/checkout@v3
  #       - name: Cypress run
  #         uses: cypress-io/github-action@v5
  #         with:
  #           start: npm run serve
  #           wait-on: 'http://ip6-localhost:5173/' # this has been changed when the default runner on git hub changed to node 18
  #           record: false
  #         env:
  #           CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
  #           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  sonarqube:
    # needs: cypress
    runs-on: ubuntu-latest
    permissions: read-all
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: install dependencies
        run: npm i

      - name: run test coverage
        run: npm run coverage
      - name: pull sonarqube image
        run: docker pull sonarqube
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v1
        with:
          sonar-host-url: 'http://localhost:9000'
          sonar-login: ${{ secrets.SONAR_TOKEN }}
          project-key: 'dev-ops'
    #   - name: create a docker container
    #     run: docker run -d --name sonarqube -p 9000:9000 -p 9092:9092 sonarqube
    #   - name: check docker Ip
    #     run: docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' sonarqube
    #   - name: sonarqube scan
    #     uses: sonarsource/sonarqube-scan-action@master
    #     env:
    #       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    #       SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
    #   - uses: sonarsource/sonarqube-quality-gate-action@master
    #     timeout-minutes: 5
    #     env:
    #       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
