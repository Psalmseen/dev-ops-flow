name: Deployment
on:
  push:
    branches:
      - '**'

jobs:
  #   test:
  #     runs-on: ubuntu-latest
  #     steps:
  #       - name: Checkout
  #         uses: actions/checkout@v3
  #       - name: Install dependecies
  #         run: npm i
  #       - name: test
  #         run: npm run test
  #       - name: run coverage
  #         run: npm run coverage
  #       - name: Report Coverage
  #         if: always()
  #         uses: davelosert/vitest-coverage-report-action@v1
  #         with:
  #           vite-config-path: ./vite.config.ts

  #   cypress:
  #     runs-on: ubuntu-latest
  #     needs: test
  #     steps:
  #       - name: Checkout
  #         uses: actions/checkout@v3
  #       - name: Cypress run
  #         uses: cypress-io/github-action@v5
  #         with:
  #           start: npm run serve
  #           wait-on: 'http://ip6-localhost:5173/' # this has been changed when the default runner on git hub changed to node 18
  #           record: false
  #         env:
  #           CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
  #           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  #   sonarcloud:
  #     needs: cypress
  #     runs-on: ubuntu-latest
  #     permissions: read-all
  #     steps:
  #       - name: checkout
  #         uses: actions/checkout@v3
  #         with:
  #           fetch-depth: 0

  #       - name: install dependencies
  #         run: npm i

  #       - name: run test coverage
  #         run: npm run coverage
  #       #   - name: pull sonarqube image
  #       #     run: docker pull sonarqube
  #       - name: SonarCloud Scan
  #         uses: SonarSource/sonarcloud-github-action@master
  #         env:
  #           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
  #           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  release-to-github:
    name: release to github
    runs-on: ubuntu-latest
    # needs: sonarcloud
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: create tag
        id: create_tag
        run: |
          git config user.name 'GitHub Actions'
          git config user.email 'actions@github.com'
          echo "TAG_NAME=v$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV
          git tag -a "v$(date +'%Y%m%d%H%M%S')" -m "Release"
          git push --tags
          git pull origin
      - name: check the tag name
        run: echo $TAG_NAME
      - name: use the release action
        uses: ncipollo/release-action@v1
        with:
          token: ${{secrets.GITHUB_TOKEN}}
          tag: ${{env.TAG_NAME}}

  build-and-push:
    runs-on: ubuntu-latest
    needs: release-to-github
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: set tag
        run: |
          git status
          git describe --tags --abbrev=0
          echo "TAG_NAME=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Check tag name
        run: echo ${{env.TAG_NAME}}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/clockbox:latest
    #   - name: Build and push Docker image
    #     env:
    #       DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
    #       DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    #     run: |
    #       # Set your Docker image name and tag
    #       IMAGE_NAME="psalmseen/sample"
    #       TAG="${{ env.TAG_NAME }}"

    #       # Build and push Docker image
    #       docker buildx create --use
    #       docker buildx build -t $IMAGE_NAME:$TAG -t $IMAGE_NAME:latest --push .
